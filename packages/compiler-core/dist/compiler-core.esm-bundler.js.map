{
  "version": 3,
  "sources": ["../../shared/src/makeMap.ts", "../../shared/src/general.ts", "../src/ast.ts", "../src/utils.ts", "../src/parse.ts"],
  "sourcesContent": ["export function makeMap(str: string): (key: string) => boolean {\n\tconst map: Record<string, boolean> = Object.create(null);\n\tconst strs = str.split(',');\n\tfor (let i = 0; i < strs.length; i++) {\n\t\tmap[strs[i]] = true;\n\t}\n\treturn val => !!map[val];\n}\n", "import { makeMap } from './makeMap';\n\nexport const isObject = (val: unknown): val is Record<any, any> => val !== null && typeof val === 'object';\n\nexport const hasChanged = (value: any, oldValue: any): boolean => !Object.is(value, oldValue);\n\nexport const isFunction = (val: unknown): val is Function => typeof val === 'function';\n\nexport const NOOP = () => {};\n\nexport const isArray = Array.isArray;\nexport const isMap = (val: unknown): val is Map<any, any> => toTypeString(val) === '[object Map]';\nexport const isSet = (val: unknown): val is Set<any> => toTypeString(val) === '[object Set]';\nexport const isString = (val: unknown): val is String => typeof val === 'string';\n\nexport const objectToString = Object.prototype.toString;\nexport const toTypeString = (value: unknown): string => objectToString.call(value);\n\nexport const isPlainObject = (val: unknown): val is object => toTypeString(val) === '[object Object]';\n\nexport const isNoEmptyValue = (val: unknown) => val !== undefined || val !== null;\n\nexport const extend = Object.assign;\n\nexport const EMPTY_OBJ: { readonly [key: string]: any } = {};\n\n// \u4E8B\u4EF6 onXxxx \u6216\u8005\u4E5F\u53EF\u4EE5\u8FD9\u4E48\u5199\uFF1A /^on[A-Z]/\nexport const onRE = /^on[^a-z]/;\n\nexport const isOn = (key: string) => onRE.test(key);\n\n// \u4E0B\u9762\u8FD9\u4E9Bkey\u662Fvue\u5185\u90E8\u4FDD\u7559\u7684\u5173\u952E\u5B57\uFF0C\u5143\u7D20\u81EA\u5B9A\u4E49\u5C5E\u6027props\u4E00\u822C\u4E0D\u5141\u8BB8\u7528\u4E0B\u9762\u7684key, \u7A7A\u5B57\u7B26\u4E32\u4E5F\u7B97\n// [\"\", \"key\", \"ref\"]\nexport const isReservedProp = makeMap(',key,ref');\n", "// \u6574\u4F53\u89E3\u6790\u89C4\u5219 \u53C2\u8003 acorn\n// https://github.com/acornjs/acorn\n\nexport const enum NodeTypes {\n\tROOT,\n\t// \u666E\u901A\u5143\u7D20\n\tELEMENT,\n\t//\u6587\u672C\n\tTEXT,\n\t// \u6CE8\u91CA\n\tCOMMENT,\n\t// \u8868\u8FBE\u5F0F\n\tSIMPLE_EXPRESSION,\n\n\tINTERPOLATION,\n\t// attr\n\tATTRIBUTE,\n\t// \u6307\u4EE4\n\tDIRECTIVE,\n\t// containers\n\tCOMPOUND_EXPRESSION,\n\n\t// if\n\tIF,\n\n\t// if - else-if else\n\tIF_BRANCH,\n\n\t// for\n\tFOR,\n\n\t// text\n\tTEXT_CALL,\n\n\t// codegen\n\n\t// vnode\n\tVNODE_CALL,\n\n\t// \u56DE\u8C03\n\tJS_CALL_EXPRESSION,\n\t// object\n\tJS_OBJECT_EXPRESSION,\n\t// \u5C5E\u6027\n\tJS_PROPERTY,\n\t// \u6570\u7EC4\n\tJS_ARRAY_EXPRESSION,\n\t// function\n\tJS_FUNCTION_EXPRESSION,\n\n\t// if else\n\tJS_CONDITIONAL_EXPRESSION,\n\n\t// \u7F13\u5B58\n\tJS_CACHE_EXPRESSION\n}\n\nexport interface Node {\n\ttype: NodeTypes;\n\tloc: SourceLocation;\n}\n\nexport interface BaseElementNode extends Node {\n\t// \u6807\u7B7E\uFF1A div  span  br  ul\n\ttag: string;\n\n\ttagType: ElementTypes;\n\n\tchildren: TemplateChildNode[];\n}\n\nexport const enum ElementTypes {\n\t// \u666E\u901A\u6587\u672C\n\tELEMENT,\n\t// \u7EC4\u4EF6\n\tCOMPONENT,\n\tSLOT,\n\tTEMPLATE\n}\n\nexport type ElementNode = BaseElementNode;\n\nexport type TemplateChildNode = ElementNode | TextNode;\n\nexport interface TextNode extends Node {\n\ttype: NodeTypes.TEXT;\n\tcontent: string;\n}\n\nexport interface Position {\n\t// \u6587\u672C\u504F\u79FB\u91CF\n\toffset: number;\n\n\t// \u7B2C\u51E0\u884C\n\tline: number;\n\n\t// \u7B2C\u51E0\u5217\n\tcolumn: number;\n}\n\n// \u5F00\u95ED\u533A\u95F4 [start, end)\nexport interface SourceLocation {\n\t// \u6587\u672C\u5185\u5BB9\u5F00\u59CB\u7684\u7684\u4F4D\u7F6E\n\tstart: Position;\n\n\t// \u6587\u672C\u5185\u5BB9\u7ED3\u675F\u7684\u7684\u4F4D\u7F6E\n\tend: Position;\n\n\t// \u6587\u672C\u5185\u5BB9\n\tsource: string;\n}\n\nexport const locStub: SourceLocation = {\n\tsource: '',\n\tstart: { line: 1, column: 1, offset: 0 },\n\tend: { line: 1, column: 1, offset: 0 }\n};\n\nexport function createRoot(children: any[], loc = locStub) {\n\treturn {\n\t\ttype: NodeTypes.ROOT,\n\t\tchildren,\n\t\thelpers: new Set(),\n\t\tcomponents: [],\n\t\tdirectives: [],\n\t\thoists: [],\n\t\timports: [],\n\t\tcached: 0,\n\t\ttemps: 0,\n\t\tcodegenNode: undefined,\n\t\tloc\n\t};\n}\n", "import { extend } from '@vue/shared';\nimport { Position } from './ast';\n\n/**\n * Advances the position with mutation.\n *\n * @param {Position} pos - The current position.\n * @param {string} source - The source string.\n * @param {number} [numberOfCharacters=source.length] - The number of characters to advance.\n * @return {Position} The updated position.\n */\nexport function advancePositionWithMutation(\n\tpos: Position,\n\tsource: string,\n\tnumberOfCharacters: number = source.length\n): Position {\n\t// \u9ED8\u8BA4\u7B2C0\u884C\n\tlet linesCount = 0;\n\t// \u6298\u884C\u4F4D\u7F6E\n\tlet lastNewLinePos = -1;\n\t// some text\n\tfor (let i = 0; i < numberOfCharacters; i++) {\n\t\t// \u6362\u884C\u7B26 \\n\n\t\t// \"\\n\".charCodeAt(0) === 10\n\t\tif (source.charCodeAt(i) === 10) {\n\t\t\t// \u7D2F\u8BA1\u884C\u6570\n\t\t\tlinesCount++;\n\n\t\t\t// \u8BB0\u5F55\u6700\u540E\u4E00\u4E2A\u884C\u6570\n\t\t\tlastNewLinePos = i;\n\t\t}\n\t}\n\n\t// \u504F\u79FB += \u6587\u672C\u957F\u5EA6\n\tpos.offset += numberOfCharacters;\n\t// \u884C += \u884C\u6570\n\tpos.line += linesCount;\n\n\t// \u5217 = \u6709\u6362\u884C\uFF0C\u5C31\u53D6\u4E4B\u524D\u7684\u5217\u6570+\u6587\u672C\u957F\u5EA6\n\t// \u6362\u884C\u4E4B\u540E\uFF0C\u65B0\u8D77\u7684\u884C\u6570\uFF0C\u5C31\u662F\u6298\u884C\u540E\u6700\u540E\u4E00\u5217\n\tpos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\n\n\treturn pos;\n}\n", "import { extend } from '@vue/shared';\nimport {\n\tElementNode,\n\tElementTypes,\n\tNodeTypes,\n\tPosition,\n\tSourceLocation,\n\tTemplateChildNode,\n\tTextNode,\n\tcreateRoot\n} from './ast';\nimport { advancePositionWithMutation } from './utils';\n\nexport interface ParserOptions {\n\tdelimiters?: [string, string];\n}\n\nexport const enum TextModes {\n\t//          | Elements | Entities | End sign              | Inside of\n\tDATA //    | \u2714        | \u2714        | End tags of ancestors |\n}\n\nconst enum TagType {\n\tStart,\n\tEnd\n}\n\nconst defaultParserOptions: ParserOptions = {\n\t// \u52A8\u6001\u63D2\u503C\n\tdelimiters: [`{{`, `}}`]\n};\n\nexport interface ParserContext {\n\toptions: ParserOptions;\n\treadonly originalSource: string;\n\tsource: string;\n\toffset: number;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function baseParse(content: string, options: ParserOptions = {}) {\n\tconst context = createParserContext(content, options);\n\tconst start = getCursor(context);\n\tconst children = parseChildren(context, TextModes.DATA, []);\n\tconst loc = getSelection(context, start);\n\treturn createRoot(children, loc);\n}\n\nfunction parseChildren(context: ParserContext, mode: TextModes, ancestors: ElementNode[]) {\n\tconst nodes: TemplateChildNode[] = [];\n\n\t// \u76F4\u5230\u627E\u5230\u6807\u7B7E\u7ED3\u675F\u4E3A\u6B62\n\twhile (!isEnd(context, mode, ancestors)) {\n\t\tconst s = context.source;\n\t\tdebugger;\n\t\tlet node: TemplateChildNode | undefined = undefined;\n\t\tif (startsWith(s, context.options.delimiters[0])) {\n\t\t\t// \"{{\" \u627E\u5230\u63D2\u503C\n\t\t\t// TODO:\n\t\t} else if (s[0] === '<') {\n\t\t\t// \u5339\u914D\u6807\u7B7E< \u5F00\u5934\n\t\t\tif (s.length === 1) {\n\t\t\t\t// <\n\t\t\t\tthrow new SyntaxError('\u8BED\u6CD5\u9519\u8BEF');\n\t\t\t} else if (s[1] === '!') {\n\t\t\t\t// \u6CE8\u91CA\u6807\u7B7E, \u5FFD\u7565\u4E0D\u7BA1\n\t\t\t} else if (s[1] === '/') {\n\t\t\t\t// </\n\t\t\t\tif (s.length === 2) {\n\t\t\t\t\tthrow new SyntaxError('\u8BED\u6CD5\u9519\u8BEF');\n\t\t\t\t} else if (s[2] === '>') {\n\t\t\t\t\t// </>\n\t\t\t\t\tthrow new SyntaxError('\u8BED\u6CD5\u9519\u8BEF-\u7F3A\u5C11tag\u540D\u79F0');\n\t\t\t\t} else if (/[a-z]/i.test(s[2])) {\n\t\t\t\t\t// \u5339\u914D\u5230\u4E86\u6807\u7B7E: </a-z>\n\t\t\t\t\t// \u89E3\u6790\u6807\u7B7E\n\t\t\t\t\tparseTag(context, TagType.End);\n\t\t\t\t}\n\t\t\t} else if (/[a-z]/i.test(s[1])) {\n\t\t\t\t// <div></div>\n\t\t\t\tparseElement(context, ancestors);\n\t\t\t}\n\t\t}\n\n\t\t// \u5982\u679C\u4E0A\u9762\u4E0D\u662F\u6807\u7B7E\uFF0C\n\t\tif (!node) {\n\t\t\tnode = parseText(context, mode);\n\t\t}\n\n\t\tnodes.push(node);\n\t}\n\n\treturn nodes;\n}\n\nfunction parseText(context: ParserContext, mode: TextModes): TextNode {\n\t// [<, {{]\n\tconst endTokens = ['<', context.options.delimiters[0]];\n\tlet endIndex = context.source.length;\n\tfor (let i = 0; i < endTokens.length; i++) {\n\t\tconst index = context.source.indexOf(endTokens[i]);\n\t\tif (endIndex > index && index !== -1) {\n\t\t\t// {{aaaaasd}}<div></div>\n\n\t\t\t// \u627E\u5230 {{ \u8FD9\u4E2A\u4F4D\u7F6E\n\t\t\tendIndex = index;\n\t\t}\n\t}\n\n\tconst start = getCursor(context);\n\tconst content = parseTextData(context, endIndex);\n\n\treturn {\n\t\ttype: NodeTypes.TEXT,\n\t\tloc: getSelection(context, start),\n\t\tcontent\n\t};\n}\n\nfunction parseTextData(context: ParserContext, length: number) {\n\tconst rawText = context.source.slice(0, length);\n\n\tadvanceBy(context, length);\n\treturn rawText;\n}\n\nfunction parseElement(context: ParserContext, ancestors: ElementNode[]): ElementNode {\n\t// \u5F00\u59CB\u6807\u7B7E <div\n\tconst element = parseTag(context, TagType.Start);\n\n\t// \u628A\u5F00\u59CB\u6807\u7B7E\u90FD\u5B58\u5728\u961F\u5217\u4E2D\n\tancestors.push(element);\n\t// \u9012\u5F52\u5904\u7406\u5B50\u5143\u7D20\n\t// <div><span></span><div>\n\tconst children = parseChildren(context, TextModes.DATA, ancestors);\n\n\t// \u961F\u5217\u6E05\u7A7A\n\tancestors.pop();\n\n\t// \u7ED3\u675F\u6807\u7B7E </div>\n\tif (startsWithEndTagOpen(context.source, element.tag)) {\n\t\t// \u89E3\u6790\u7ED3\u675F\u6807\u7B7E\n\t\tparseTag(context, TagType.End);\n\t} else {\n\t\t// \u5982\u679C\u5F00\u59CB\u6807\u7B7E\u548C\u7ED3\u675F\u6807\u7B7E\u4E0D\u5339\u914D\n\t\tthrow new SyntaxError('HTML\u8BED\u6CD5\u9519\u8BEF');\n\t}\n\n\t// \u628Achildren\u5B58\u8D77\u6765\n\telement.children = children;\n\n\t// \u5149\u6807\u4F4D\u7F6E\n\telement.loc = getSelection(context, element.loc.start);\n\n\treturn element;\n}\n\nfunction parseTag(context: ParserContext, type: TagType): ElementNode {\n\tconst start = getCursor(context);\n\n\tconst match = /^<\\/?([a-z][^\\s />]*)/i.exec(context.source)!;\n\n\t// div\n\tconst tag = match[1];\n\n\t// </div\n\t// \u79FB\u52A8\u622A\u53D6\u4F4D\u7F6E\u5230\u6700\u540E\n\tadvanceBy(context, match[0].length);\n\n\t// \u95ED\u5408\u6807\u7B7E>\n\tlet isSelfClosing = false;\n\n\t// <div>\n\tif (startsWith(context.source, '>')) {\n\t\tisSelfClosing = true;\n\t}\n\n\t// \u5728\u5916\u540E\u8FDB\u4E00\u4E2A\u5149\u6807 \u5230 > \u540E\u9762\n\tadvanceBy(context, isSelfClosing ? 2 : 1);\n\n\t// \u5982\u679C\u662Fend \u5149\u6807\u8FDB\u5230>\u540E\u9762\uFF0C\u8868\u793A\u89E3\u6790\u5B8C\u6210\n\tif (type === TagType.End) return;\n\n\treturn {\n\t\t// \u6807\u8BC6\u6574\u4E2A\u8282\u70B9\u7684\u7C7B\u578B\n\t\ttype: NodeTypes.ELEMENT,\n\t\ttag,\n\t\tloc: getSelection(context, start),\n\t\tchildren: [],\n\t\t// tag\u7684\u7C7B\u578B\n\t\ttagType: ElementTypes.ELEMENT\n\t};\n}\n\nfunction createParserContext(content: string, rawOptions: ParserOptions): ParserContext {\n\tconst options = extend({}, defaultParserOptions);\n\n\tlet key: keyof ParserOptions;\n\tfor (key in rawOptions) {\n\t\toptions[key] = rawOptions[key] === undefined ? defaultParserOptions[key] : rawOptions[key];\n\t}\n\n\treturn {\n\t\toptions,\n\t\t// \u5217\n\t\tcolumn: 1,\n\t\t// \u9ED8\u8BA4\u7B2C\u4E00\u884C\n\t\tline: 1,\n\t\t// \u6CA1\u6709\u504F\u79FB\n\t\toffset: 0,\n\t\t// \u6E90\u6570\u636E\n\t\toriginalSource: content,\n\t\tsource: content\n\t};\n}\n\nfunction getCursor(context: ParserContext): Position {\n\tconst { column, line, offset } = context;\n\treturn { column, line, offset };\n}\n\nfunction getSelection(context: ParserContext, start: Position, end?: Position): SourceLocation {\n\tend = end || getCursor(context);\n\treturn {\n\t\tstart,\n\t\tend,\n\t\t// \u622A\u53D6\u5F00\u59CB/\u7ED3\u675F\u533A\u95F4\u7684\u6570\u636E\n\t\tsource: context.originalSource.slice(start.offset, end.offset)\n\t};\n}\n\nfunction startsWith(source: string, searchString: string) {\n\treturn source.startsWith(searchString);\n}\n\nfunction isEnd(context: ParserContext, mode: TextModes, ancestors: ElementNode[]) {\n\tconst s = context.source;\n\tswitch (mode) {\n\t\tcase TextModes.DATA:\n\t\t\t// </div> \u6807\u7B7E\u7ED3\u675F\n\t\t\tif (startsWith(s, '</')) {\n\t\t\t\t// \u5012\u5E8F\u67E5\u627E\uFF1A </div>\n\t\t\t\tfor (let i = ancestors.length - 1; i >= 0; --i) {\n\t\t\t\t\tif (startsWithEndTagOpen(s, ancestors[i].tag)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn !s;\n}\n\nfunction startsWithEndTagOpen(source: string, tag: string) {\n\t// tag: div span  br  ul\n\n\t// </div>\n\t// source.slice(2, tag.length + 2) = div\n\t// \u5339\u914D\u6700\u540E\u4E00\u4E2A \u95ED\u5408\u6807\u7B7E  >\n\treturn (\n\t\tstartsWith(source, '</') &&\n\t\tsource.slice(2, tag.length + 2).toLowerCase() === tag.toLowerCase() &&\n\t\t/[\\s />]/.test(source[tag.length + 2] || '>')\n\t);\n}\n\nfunction advanceBy(context: ParserContext, numberOfCharacters: number) {\n\tadvancePositionWithMutation(context, context.source, numberOfCharacters);\n\t// \u8FD9\u4E2A\u5730\u65B9\u662F\u552F\u4E00\u4FEE\u6539source\u7684\u5730\u65B9\n\t// \u79FB\u52A8\u5149\u6807\uFF0C\u622A\u53D6\u540EnumberOfCharacters\u4E2A\u5B57\u7B26\n\tcontext.source = context.source.slice(numberOfCharacters);\n}\n"],
  "mappings": "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",
  "names": ["NodeTypes", "ElementTypes", "TextModes"]
}
